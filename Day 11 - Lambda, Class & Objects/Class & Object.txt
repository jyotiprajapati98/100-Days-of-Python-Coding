Class & Object:
Class is a blueprint or constructor, it is an object oriented programming language.

Example: Class with objects
class MyClass:
  x = 5
  name ="Jyoti"

p1 = MyClass()
print(p1.x)
print(p1.name)

Output*****************
5
Jyoti

*****************************************
a) The _init_function: The __init__() function is called automatically every time the class is being used to create a new object.

class Person:
  def __init__(self, name, age):
    self.name = name
    self.age = age

p1 = Person("Jyoti", 25)
print(p1.name)
print(p1.age)

****************OUTPUT*****************
Jyoti
25

b) __Str()__ function: It handle the objects when return type is string.
Example:

print("Function without _Str()_ function")
class Person:
  def __init__(self, name, age):
#Self is like this statement is C/C++ it indicate the current class variables.
    self.name = name
    self.age = age

p1 = Person("John", 36)
print(p1)


print("\nFunction with _Str()_ function")
class Person1:
  def __init__(self, name, age):
    self.name = name
    self.age = age

  def __str__(self):
    return f"{self.name}({self.age})"

p1 = Person1("John", 36)

print(p1)

***********OUTPUT************************************
Function without _Str()_ function
<__main__.Person object at 0x148a8815f0d0>

Function with _Str()_ function
John(36)



****************************** OBJECTS ******************************************
Objects contains the method, it can call the functions.

a) Self Parameter: It refers the current rference or object of the class.
Example:
#class name is person
class Person:
  def __init__(currObject, name, age):
    currObject.name = name
    currObject.age = age

  def myfun(a):
    print("Hello I am " + a.name) #object.name

p1 = Person("Jyoti", 25) #create object with parameters
p1.myfun() #call function here

OUTPUT: I am Jyoti

b) Object Modification: We cal modify the object values statically and runtime both.
Example:
#class name is person
class Person:
  def __init__(currObject, name, age):
    currObject.name = name
    currObject.age = age

  def myfun(a):
    print("Hello I am " + a.name + ", My age is ", a.age) #object.name

p1 = Person("Jyoti", 25) #create object with parameters
p1.age = 24 #statically object modification
p1.myfun() #call function here

OUTPUT: Hello I am Jyoti, My age is  24

c) Object deletion: To delete the objects, the del is used. Syntax: del <object name>
Example:
#class name is person
class Person:
  def __init__(currObject, name, age):
    currObject.name = name
    currObject.age = age

p1 = Person("Jyoti", 25) #create object with parameters
p1.age = 24 #statically object modification

#delete the object
del p1

print(p1.age)

OUTPUT: 
Traceback (most recent call last):
  File "./prog.py", line 13, in <module>
NameError: name 'p1' is not defined



